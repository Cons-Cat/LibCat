// -*- mode: c++ -*-
// vim: set ft=cpp:
#pragma once

/* legacy_types.hpp contains the numerical data types and constants that are
 * expected from an implementation of stdint.h. I am considering them deprecated
 * here, but they are supported because a substantial amout of C code that I
 * care about requires them.
 *
 * Those types and constants are available in both the global namespace as well
 * as the std:: namespace.
 */
#include <detail/legacy_types.hpp>

using i8 = int8_t;
using u8 = uint8_t;

using i16 = int16_t;
using u16 = uint16_t;

using i32 = int32_t;
using u32 = uint32_t;

using i64 = int64_t;
using u64 = uint64_t;
using isize = ssize_t;
using usize = size_t;

using i128 = int128_t;
using u128 = uint128_t;

// These are GCC built-in types:
// using f16 = _Float16;
using f32 = float;
using f64 = double;
using f128 = __float128;
using x128 = float __attribute__((mode(TC))) _Complex;

using bool8 = u8;
using bool16 = u16;
using bool32 = u32;

/* #include these here, so that the only -include build flag required is for
 * <cstdint>. */
#include <detail/simd.hpp>
#include <detail/vector_primitives.hpp>
