// -*- mode: c++ -*-
// vim: set ft=cpp:
#pragma once

#include <concepts>
#include <type_traits>

// i386 and x86-64 are little endian.
constexpr bool1 is_little_endian = true;
constexpr bool1 is_big_endian = !is_little_endian;

namespace cat {

auto invert_endianess(meta::integral auto value) {
    if constexpr (sizeof(value) == 1) {
        return __builtin_bswap8(value);
    }
    if constexpr (sizeof(value) == 2) {
        return __builtin_bswap16(value);
    }
    if constexpr (sizeof(value) == 4) {
        return __builtin_bswap32(value);
    }
    if constexpr (sizeof(value) == 8) {
        return __builtin_bswap64(value);
    }
}

}  // namespace cat

constexpr auto operator""_ki(unsigned long long const input) -> long {
    return static_cast<long>(1024 * input);
}

constexpr auto operator""_mi(unsigned long long const input) -> long {
    return static_cast<long>(1024 * 1024 * input);
}

constexpr auto operator""_gi(unsigned long long const input) -> long {
    return static_cast<long>(1024 * 1024 * 1024 * input);
}
