// -*- mode: c++ -*-
// vim: set ft=cpp:
#pragma once

#include <cat/meta>
#include <cat/numerals>

// Name mangling prevents the linker from finding this symbol.
extern "C"
    // GCC wants to insert a `__asan_handle_no_return()` call, which breaks
    // argument loading.
    [[gnu::no_sanitize_address]] void
    _start();

namespace cat {
// The `cat::exit()` function is provided globally. This streamlines out the
// existence of `_exit()`.
[[noreturn]] void exit(ssize exit_code = 0);

auto load_base_stack_pointer() -> void*;

// This must be inlined, or its semantics are incorrect.
[[gnu::always_inline]] inline void align_stack_pointer_16() {
    asm("and $-16, %rsp");
}

// This must be inlined, or its semantics are incorrect.
[[gnu::always_inline]] inline void align_stack_pointer_32() {
    asm("and $-32, %rsp");
}

// NOLINTNEXTLINE `_stack_chk_fail()` must begin with an underscore.
extern "C" [[noreturn]] void __stack_chk_fail();

}  // namespace cat
