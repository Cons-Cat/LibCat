// -*- mode: c++ -*-
// vim: set ft=cpp:
#pragma once

#include <allocators>
#include <linux>

struct Thread {
    Any id;
    void* p_stack;
    ssize stack_size;

    // This is platform-specific hidden code.
  private:
    nix::Process process;
  public:
    Thread() = default;
    Thread(Thread const&) = delete;

    auto create(meta::Allocator<void*> auto& allocator,
                ssize const initial_stack_size, auto const& function,
                void* p_arguments_struct) -> Result<> {
        return this->process.create(allocator, initial_stack_size, function,
                                    p_arguments_struct);
    }

    auto join() const -> Result<> {
        return this->process.wait();
    }
};

namespace sync {

void relax_cpu() {
    asm volatile("pause" ::: "memory");
}

}  // namespace sync
