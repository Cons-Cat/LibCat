// -*- mode: c++ -*-
// vim: set ft=cpp:
#pragma once

#include <cat/numerals>
#include <cat/optional>
#include <cat/utility>

namespace cat {

template <typename From, typename To>
constexpr auto numeric_cast(From from) -> Optional<To> {
    To const to = static_cast<To>(from);
    constexpr bool has_same_signedness = is_signed<From> != is_signed<To>;

    if constexpr (sizeof(To) < (sizeof(from)) && has_same_signedness) {
        if (static_cast<From>(to) != to) {
            // Overflow occurred.
            return nullopt;
        }

        // TODO: Make an `has_same_signedness` trait.
        if constexpr (!has_same_signedness) {
            if ((to < To{}) != (from < From{})) {
                // Overflow occurred.
                return nullopt;
            }
        }
    }

    return to;
}

}  // namespace cat
